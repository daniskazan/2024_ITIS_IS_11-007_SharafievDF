
    
    

    






    Вопросы-ответы (FAQ) | Индивидуальное обучение программированию
    

    
    
    



    


    

    
    


    DevEducation
        обучение программированиюГлавнаяО курсах
                            Курсы
                        Алгоритмы и Структуры данныхPythonJavaScriptHTML & CSSБазы данныхLinuxВсе курсыFAQБлогКонтакты @m5dev
                         denden343
                        


    
        
            
                
                    Вопросы-ответы (FAQ)
                    
                
            
        
    

    
        

        

        
            
    
        
            
                
                    
                        
                            
                                 Раскрыть все
                            
                            
                                 Свернуть все
                            
                        
                    
                
            

            
                
                    
    
        
            #1 Какие технологии и языки программирования актуальны? 
        
    
    
        Рейтингу TIOBE Programming Languages TOP можно доверять.
По запросу: "programming languages top" можно найти альтернативные точки зрения.

В общих чертах актуальные языки и технологии для web-dev выглядят следующим образом:

Python:
Django, FastAPI, Flask, Celery, Selenium, PyTest, AsyncIO...

JavaScript:
TypeScript, Node.js, Vue, Nuxt.js, Svelte, React, Next.js...

Базы данных:
SQL (Relational), NoSQL (Non-Relational)
    


                
                    
    
        
            #2 Для кого подходят курсы? 
        
    
    
        Курсы подойдут для начинающих или для уже имеющих знания в программировании, желающих их расширить и получить опыт практической работы.

Я занимаюсь веб-разработкой, поэтому обучаю программированию в контексте web-dev, хотя принципы для всех языков одни. Это означает, что вы можете выучить один язык и после выбрать себе ту специализацию которая вам интересна.
    


                
                    
    
        
            #3 С чего начать изучение программирования? 
        
    
    
        Для начала ознакомьтесь с вопросами-ответами, этот раздел регулярно дополняется и содержит много полезной информации о курсах и об IT сфере в целом. Отвечаю на вопросы честно и непредвзято.

После ответьте на ряд вопросов:


Чему вы хотите научиться в итоге, какова ваша цель?
Что вы уже знаете и умеете?
Сколько времени вы готовы уделить обучению?
Подумайте над тем проектом, который близок и интересен вам. Что бы вы хотели реализовать и развивать?


Любой язык программирования и технологии которые строятся на его основе - просто инструменты созданные для решения различных задач. Подходить к обучению надо осмысленно, с пониманием того к чему вы хотите прийти в тоге.
IT сфера крайне противоречива и неоднозначна, вокруг неё существует много хайпа и иллюзий которые существуют в сознании обывателя. На деле это прежде всего большой ежедневный труд, упорство и постоянное развитие себя.
В с 2006 года и могу уверенно сказать что это сложно, но при этом очень здорово, за все эти годы ни на секунду не разочаровался и не пожалел о своем выборе!

Свяжитесь со мной, расскажу подробнее и отвечу на возникшие вопросы.
    


                
                    
    
        
            #4 Сколько времени необходимо чтобы стать программистом? 
        
    
    
        А сколько времени необходимо что бы стать хорошим врачом, юристом, экономистом, строителем...?
Учиться придется постоянно, это является частью любой профессии, для IT это утверждение особенно актуально.

Скорость получения необходимого минимума знаний напрямую зависит от времени которое вы готовы уделять обучению.

Попробуйте оценить самостоятельно сколько времени потребуется вам чтобы:


Хорошо изучить теоретическую основу какого-нибудь языка
Получить опыт практической работы (с языком)
Изучить хотя бы один фреймворк или иной инструмент
Изучить смежные технологии и языки (например: вы хотите стать backend разработчиком, вам потребуется изучить какой-нибудь серверный язык и SQL + понимать как работает front)
Научиться тестировать ваш код
Научиться деплоить (Linux, Docker, CI\CD...)
Освоив базу выше, изучить и понять Алгоритмы и Структуры Данных + некоторое количество различных парадигм, концепций, принципов и т.д.


Это минимум. По каждому пункту надо иметь уверенные знания, и придумал это не я, таковы требования рынка.

У меня нет цели напугать вас или демотивировать, наоборот, все это вполне реально изучить и понять. Всё совсем не так страшно как может показаться на первый взгляд.
    


                
                    
    
        
            #5 Какой язык программирования выбрать для изучения? 
        
    
    
        Любой язык программирования - это просто инструмент который создан для решения определенного набора задач. По сути у всех языков есть общие принципы, изучив которые на примере одного языка можно освоить другой.

Различают следующие типы языков программирования:


Машинный язык или двоичный код - язык состоит из 1 и 0. Но вообще это тема достойна отдельного разговора.
Низкоуровневые - созданы для упрощения написания двоичного кода, используют интерпретаторы и компиляторы преобразующие более понятные человеку языковые конструкции в машинный язык. В качестве примера такого языка можно привести Assembler.
Высокоуровневые - это самая популярная группа языков, которые имеют высокий уровень абстракции и максимально понятные конструкции для человека. Также используют компиляторы и интерпретаторы, различаются по синтаксису и требованиям к типизации данных. Например, C++ или C# будут требовать от вас явного обозначения типа данных переменных, аргументов функций и т.п., тогда как Python, PHP, JavaScript возложат эту задачу на компилятор\интерпретатор, соответственно, с последними работать проще.


Критерии выбора языка:


Должен подходить для решения ваших задач или широкого спектра;
Должен иметь развитую и живую инфраструктуру (библиотеки, модули, фреймворки и т.д.);
Должен иметь большое и активное сообщество;
Должен быть востребован на рынке;
Желательно что бы имел понятный синтаксис.


Существует большое количество рейтингов, один из них tiobe.com, на мой взгляд объективно отражает картину.

Для совсем начинающих рекомендую Python т.к. всем вышеперечисленным критериям он соответствует.
Более сложный вариант – JavaScript.
+ Технологии на основе данных языков.
    


                
                    
    
        
            #6 Вы профессиональный преподаватель? 
        
    
    
        Нет, я не преподаватель. Профессиональный программист - да, т.к. работаю в сфере с 2006 г..
Правильнее сказать - практик с многолетним опытом работы.
    


                
                    
    
        
            #7 Какой язык программирования выучить лучше? 
        
    
    
        Нет ни "лучших" ни "худших" языков, есть более или менее подходящие языки для решения той или иной задачи или задач.
    


                
                    
    
        
            #8 Хочу выучить C\C#\C++\Java\Go etc., а вы обучаете Python\JavaScript\SQL есть ли смысл приходить к вам учиться? 
        
    
    
        Любой существующий язык программирования это инструмент для решения широкого либо специфического спектра задач.
Языки отличаются по множеству критериев, но общие принципы программирования практически для всех одинаковы.

Это означает что изучив один язык вам будет существенно проще освоить любой другой. В том случае если вы вообще впервые сталкиваетесь с программированием, то проще изучить дружелюбный для начинающих и простой в плане синтаксиса Python или в меньшей степени JavaScript, а после переходить к C#\C++\Java и другим.
    


                
                    
    
        
            #9 Насколько эффективны ваши курсы? 
        
    
    
        Мне удается подготовить 1-3 человек в год, которые в итоге приходят в профессию, без учета консультаций по специфическим вопросам и работы с людьми по повышению их квалификации.

Надо понимать, что у всех разные цели: кто-то находит в этом свое призвание, кому-то просто интересно узнать что это такое, кто-то изучает программирование для развития собственного бизнеса, у всех разные цели.

Много это или мало, сложно сказать, я выступаю за качественные, а не за количественные показатели.
    


                
                    
    
        
            #10 В чем ваши преимущества? 
        
    
    
        Для меня обучение программированию не основная деятельность (работаю программистом), а возможность поделиться накопленными знаниями и опытом.

– Прежде всего, я не вешаю вам "лапшу на уши" и не обещаю что вы станете олигархами после курсов.

– Я не вру вам что изучить какой-либо язык программирования\технологию легко, нет, это не легко, но и не так сложно как может показаться.

– Не рассказываю сказки по поводу трудоустройства.

– Всё внимание только вам. Никогда не вёл и не буду вести групповых занятий.

– Не набираю большого количества людей на обучение (1-2 человека в параллели, не более).

– Занимайтесь в том ритме в котором комфортно вам, вас никто никуда не торопит.

– Никакой навязчивости и маркетинга.

– Не обещаю того, чего не могу выполнить и не берусь за то, что изначально будет неэффективно или бессмысленно.

– Сам ежедневно работаю с теми языками и технологиями, которым обучаю.

– Даю теорию в понятном и доступном виде с объяснением почему надо знать ту или иную концепцию и для чего вам эти знания пригодятся.

– Даю много практических задач.

– Вся практические задачи уникальны и не повторяются т.е. не использую то что делал с кем-то ранее.

– Обучаю только актуальным и востребованным на рынке технологиям.

– Всегда на связи и готов ответить на любые вопросы в которых компетентен.
    


                
                    
    
        
            #11 Как проходит процесс обучения? 
        
    
    
        Перед началом занятий обсуждаем все интересующие вас вопросы и договариваемся об удобном времени начала.

После созваниваемся в скайпе и начинаем заниматься.

Если вы совсем начинающий, то на первом занятии составляем план обучения и далее двигаемся по нему.
Если вас интересует какая-то конкретная технология, то рассматриваем её.

Занятия строятся в форме диалога, решения практических задач и освоением необходимой теории.

Предлагаю избегать абстрактных примеров и заняться разработкой чего-то существенного, будь то сайт или интернет-магазин, бот для Telegram, веб-сервис, API или любой другой проект который вам интересен.

Занятия всегда индивидуальны, я против готовых скриптов и шаблонных методик. 

На самом деле важно не забить голову какой-то информацией и повторить то что показал я, важно научиться понимать суть процесса, научиться думать самостоятельно, анализировать и проектировать, именно в таком контексте строятся занятия.
    


                
                    
    
        
            #12 В какое время проводятся занятия? 
        
    
    
        В удобное для вас время.

Но просьба договариваться заранее (за 1-2 дня) т.к. удобное для вас время может быть неудобным для меня.
    


                
                    
    
        
            #13 Как часто вы рекомендуете заниматься? 
        
    
    
        Из моих наблюдений эффективнее всего заниматься регулярно 2-3 раза в неделю.

Однако, это зависит от вашего желания, времени и возможности, поэтому жестких рамок нет.
Занимайтесь с той частотой, с которой вам комфортно.

Здесь все как в спорте - надо выработать в себе дисциплинированность и не опускать руки при возникновении трудностей.

Если вы занимаетесь раз в неделю и реже, но в промежутках не тратите по несколько часов ежедневно на практику и изучение чего-то нового, то со временем вы потеряете навык и придется начинать заново почти с нуля, так делать не надо.
    


                
                    
    
        
            #14 Нужен ли английский и насколько хорошо его надо знать? 
        
    
    
        В идеале нужен свободный английский т.к. это сильно упрощает жизнь и является стандартом в IT сфере.

Если с языком совсем все плохо, то не перживайте, многие годами обходятся переводчиком и вполне комфортно себя чувствуют.
    


                
                    
    
        
            #15 Стоимость обучения\занятия 
        
    
    
        Стоимость одного часового занятия 3000 руб (60 мин)
Стоимость одного двухчасового занятия от 4000 руб (120 мин)

Cкидки при единовременной оплате:

10 занятий - 38 000 руб
стоимость одного занятия 3800 руб (1900 руб\час)

20 занятия - 70 000 руб
стоимость одного занятия 3500 руб (1750 руб\час)

40 занятий - 100 000 руб
стоимость одного занятия 2500 руб (1250 руб\час)



Оплата производится перед началом занятия.
    


                
                    
    
        
            #16 Сколько времени длится одно занятие\консультация? 
        
    
    
        Двухчасовое занятие - 2 часа (~120 мин) без учета перерывов
Часовое занятие - 1 час (~60 мин)

Занятие по предоплате - 2 часа (~120 мин) без учета перерывов

Консультация - 1 час (~60 мин)
    


                
                    
    
        
            #17 У вас дорого! 
        
    
    
        Легко проверить. Загуглите:

Hourly rate for IT Industry
Average hourly wage for Full stack Developer
Full stack Developer salary

Получите что-то в районе $13-$72 (в среднем $50\час в зависимости от опыта и компании) это на момент написания (февраль 2024 г.)

Hourly Rate for Industry: Information Technology (IT) Services, Full stack developer salary... погуглите, убедитесь самостоятельно на основе других источников.

Получается не так уж и дорого ))
    


                
                    
    
        
            #18 При каких условиях предоставляются скидки? 
        
    
    
        О скидках имеет смысл говорить только в том случае, если вы ходите заниматься два-три раза в неделю и более на протяжении продолжительного срока (от 6 мес.).

Почему так?

– Это индивидуальные занятия лично с вами, у меня нет нет конвейера и потока людей. Для подготовки каждого занятия  мне надо потратить много моего времени, а если учесть что у меня есть основная занятость, то я физически не могу в параллели обучать более 1-2 человек.
    


                
                    
    
        
            #19 Способы оплаты 
        
    
    
        Тинькофф, Сбер, ЮMoney.
    


                
                    
    
        
            #20 У вас есть пробные занятия? 
        
    
    
        Скорее всего у вас есть вопросы и достаточно просто созвониться и пообщаться, далее вы самостоятельно примите решение.
    


                
                    
    
        
            #21 Зачем платить деньги, когда в сети много бесплатных видеокурсов и книг? 
        
    
    
        Одно другому не мешает и даже наоборот, всегда советую различные платные\бесплатные курсы, видео, статьи, книги.

Часто ко мне приходят люди параллельно занимающиеся на курсах или уже прошедших их с целью повысить свои навыки, получить практический опыт.

Индивидуальные занятия намного эффективнее групповых - это факт.
    


                
                    
    
        
            #22 Мне уже за 30\40\50 есть ли смысл изучать программирование? 
        
    
    
        Возраст не играет вообще никакой роли.
    


                
                    
    
        
            #23 Как заниматься наиболее эффективно? 
        
    
    
        Если вы всерьёз настроены изучить какой-то язык программирования, то вы должны помимо занятий на курсах или индивидуально, заниматься ежедневно, и по собственной инициативе, чем больше, тем лучше. По любой непонятной вам теме задавать вопросы и после получения ответов, прорабатывать их самостоятельно.

Соблюдая эти правила результат обучения будет положительным.

Вы должны понимать, что работа программиста подразумевает самоорганизацию и много самостоятельной работы. При работе в команде, безусловно, вам могут помочь, но скорее будут ждать помощи от вас.
    


                
                    
    
        
            #24 Вы даете домашние задания? 
        
    
    
        Мы не в общеобразовательной школе.
    


                
                    
    
        
            #25 Вы обучаете PHP? 
        
    
    
        Да, можно можно учиться на основе PHP. Но я не использую его в работе примерно с 2017 года.
PHP хороший язык, он развивается, у него есть сообщество, но я с ним не работаю.
    


                
                    
    
        
            #26 В каком ВУЗе можно изучить программирование? 
        
    
    
        Работодателям в 90% случаев не интересно есть ли у вас профильное высшее образование или нет, смотрят на ваш опыт работы, знания и навыки. В любом случае профильное высшее образование лишним не будет, но не рассчитывайте на то, что оно даст вам какие-то существенные преимущества.
    


                
                    
    
        
            #27 Не проще ли освоить какую-нибудь CMS на PHP и верстку, вместо программирования? 
        
    
    
        Как вариант, можно поступить и таким образом. Только рынок фрилансеров переполнен предложениями сделать сайт на WordPress, OpenCart, Drupal, Modx и прочих CMS'ках с задачами "натянуть" на них верстку или адаптировать готовый шаблон. Это самый низкооплачиваемый, конкурентный и тупиковый сегмент, на мой взгляд.

Другое дело если изучить какой-нибудь язык программирования и работать с ним, это уже более перспективный вариант.
    


                
                    
    
        
            #28 Сколько зарабатывают программисты? 
        
    
    
        Для России (ориентируйтесь на Москву) требования и уровень дохода можно оценить https://hh.ru/search/vacancy?text=программист

Для США https://money.usnews.com/careers/best-jobs/web-developer/salary

На отечественном рынке судя по данным hh.ru стабильный бардак в плане оплаты труда, хотя есть и весьма достойные компании.

Данные по США примерно аналогичны Европейским.

Помните, что вам никто не мешает сотрудничать с любой компанией на планете или даже несколькими, все зависит от вашего скилла. Более того, работать на удаленке  это нормально для IT сферы.
    


                
                    
    
        
            #29 Программисты много зарабатывают, когда я начну зарабатывать столько же? 
        
    
    
        Да, это правда, что программисты достойно зарабатывают, только есть один нюанс - что бы хорошо зарабатывать нужен опыт, без опыта вас никуда не возьмут. Как быть в таком случае?

– Развиваться, учиться, получать опыт работая над своими проектами или участвовать в open source.
Чем больше вы будете трудиться и получать опыта, тем быстрее сможете прийти к достойному уровню доходов. Это правило применимо не только к IT, так везде.
    


                
                    
    
        
            #30 Хочу обучить сотрудника(ов) компании? 
        
    
    
        Без проблем, обращайтесь.
    


                
                    
    
        
            #31 Где проходят занятия? 
        
    
    
        Только онлайн. Это удобно и экономит наше с вами время.
    


                
                    
    
        
            #32 Хочу заниматься только очно 
        
    
    
        У очных занятий нет никаких преимуществ перед удаленными. Да и скорее всего мы находимся с вами в разных городах, занятия в скайпе экономят наше с вами время.

Сама специфика данной профессии подразумевает минимальный личный контакт из-за отсутствия в этом необходимости. Большую часть времени программист тратит на работу с кодом и самообразование, а не на перемещение себя из дома в офис и обратно.

После карантина 2020 году многие компании стали переводить желающих на удаленную работу и лояльно относиться к подобному формату работы. Скорее всего вы будете работать на удаленке, если не живете в крупном городе.

Практика удаленной работы и коммуникации в XXI веке абсолютно нормальна, разумеется, опция работать в офисе имеется, но большая часть команд работает из разных городов и стран.
Ровно такая же ситуация и с образованием, очные формы уступают онлайн-обучению.
    


                
                    
    
        
            #33 Вы выдаете диплом после завершения обучения? 
        
    
    
        Дипломы, сертификаты и прочая макулатура для программистов бесполезны.
Даю знания и практические навыки необходимые для работы, выдачей полиграфических изделий не занимаюсь.
    


                
                    
    
        
            #34 Вы трудоустраиваете после курсов? 
        
    
    
        В случае если какие-то коммерческие курсы обещают трудоустройство, это не более чем маркетинговый ход, вы должны это понимать.

Я могу дать вам знания востребованные на рынке, дать опыт практической работы, подсказать как проходить технические собеседования.
С теми знаниями, которые люди получают приходя ко мне вполне реально трудоустроиться самостоятельно на хорошие позиции в достойные компании и это уже не маркетинг, а правда. Не редко люди с которыми мы занимались продолжительное время смогли устраивались в IT-компании, становились независимыми разработчиками или стали заниматься развитием собственных проектов.

Кстати, не считаю что это только моя заслуга, люди которые добиваются чего-то прикладывают к этому много усилий самостоятельно.
    


                
                    
    
        
            #35 Обещают стипендию во время стажировки 
        
    
    
        Если вы настолько опытный разработчик что вас пригласили в крупную и известную компанию, то это вполне реально.

Другая история когда вы вообще не имеете опыта работы и вам обещают стипендию после прохождения каких-то курсов в интернете в какой-то noname конторе. С высокой долей вероятности вам врут, но врать могут и будут весьма убедительно.
    


                
                    
    
        
            #36 Почему обещания трудоустройства после курсов - ложь? 
        
    
    
        Не ложь, а маркетинг ))

Некоторые курсы при больших компаниях действительно обучают и впоследствии трудоустраивают. Только у гигантов рынка нет недостатка в уже готовых кандидатах желающих прийти к ним в штат учить которых ничему не надо.

Недостатка в вакансиях нет, предложений очень много. Зайдите на любой популярный ресурс с вакансиями и убедитесь в этом самостоятельно.
Бывает так что если вас трудоустроят после курсов, то компенсация будет существенно ниже рынка, поэтому проще и выгоднее трудоустроиться самостоятельно.

В любом случае, всегда рассматривайте подобные заявления скептически и внимательно изучайте условия (то что написано мелким шрифтом) при которых вас трудоустроят, куда и на каких условиях.
    


                
                    
    
        
            #37 Реально ли устроиться на работу после прохождения курсов? 
        
    
    
        Да, вполне реально. В моей практике 1-3 человека в год трудоустраиваются на позиции тестировщиков или Junior'ов, далее растут в профессии или открывают собственный бизнес, это уже кому что ближе.

В этом не только моя заслуга, но и самих людей которые стараются, прилагают усилия, учатся, задают вопросы, сталкиваются с проблемами и решают их. Многое зависит от человека.

Пройти техническое интервью можно только самостоятельно, благодаря своим талантам и компетенции. Я на 100% уверен в том, что может каждый.
    


                
                    
    
        
            #38 Прохожу много собеседований и никуда не берут, что со мной не так? 
        
    
    
        Так у всех, это нормально.

Собеседование и техническое интервью процесс непредсказуемый, не все и не всегда зависит от вас. Заваливают даже опытных программистов. Однако это не снимает с вас обязанности учиться и развиваться.

Перед собеседованием внимательно ознакомьтесь с требованиями и подготовьтесь, обычно попадаются вопросы и задачи в которых вы хуже всего разбираетесь, поэтому для прохождения технического интервью надо готовиться.
    


                
                    
    
        
            #39 Хочу сделать перерыв в обучении 
        
    
    
        Если вы начали заниматься и оплатили несколько занятий вперед но хотите сделать перерыв - без проблем. Просто предупредите заранее.
    


                
                    
    
        
            #40 Увидел рекламу бесплатного обучения, это правда? 
        
    
    
        
В этом мире нет ничего бесплатного, а что достается условно бесплатно, то обходится потом в двойную цену.
Автор неизвестен


Вероятнее всего это обычный кликбейтный заголовок в социальных сетях или рекламных объявлениях.
В большинстве случаев верить в то что кто-то будет бесплатно проводить обучение\семинар\тренинг\марафон (нужное подчеркнуть) по программированию - наивно. С высокой долей вероятности это банальное инфоциганство.

Основная цель - завлечь обещаниями халявы, а далее технология развешивания на уши макаронных изделий отработана. Ради интереса можете посетить любой тренинг личностного роста, собрание религиозной секты или банальный сетевой маркетинг. Везде вам зальют в уши по полной, пообещают всего и сразу, нарисуют сказочные перспективы, главное занесите немного (или много) шекелей и все у вас будет в шоколаде.

Это явление отлично описано еще в 1927 г. И.А. Ильфом и Е.П. Петровым в романе "Двенадцать стульев".
Отрывок из к/ф 12 стульев: New Васюки.

Возможно бывают приятные исключения, но я не слышал о них.
    


                
                    
    
        
            #41 Мне нужно помочь в решении задачек по программированию, вы занимаетесь этим? 
        
    
    
        Да, могу в решении задачек по программированию из стека языков и технологий с которыми работаю. + Подробно объясню варианты решений.
    


                
                    
    
        
            #42 Хочу стать QA-инженером, DevOps, Data Analyst, Data Scientist... интересуют цена вопроса и сроки? 
        
    
    
        Отвечу вопросом на вопрос: как считаете, что лучше - фундаментальные знания или ветвящиеся от него специализации и технологии?

Пример: вы хотите стать DevOps. Для этого необходимы глубокие знания Python или Go, одного из дистрибутивов Linux, Amazon Web Services (AWS) или Google Cloud.
Далее: Terraform или Ansible, Git + GitHub или GitLab, Docker или Lambda, Jenkins или CodeDeploy, ECS или Kubernetes, ELK Stack или Prometheus. Данный список неполный и может быть расширен. Всеми данными языками или технологиями вы обязаны владеть на экспертном уровне, да и на тот момент когда вы читаете это 100% одна из технологий потеряла актуальность, либо у неё появились альтернативы.

Ровно такая же ситуация у Data Scientist's и прочих специализациях. Суть в том, что вся сфера находятся в постоянной динамике, то что было актуально вчера, ушло сегодня, приходится постоянно переучиваться и осваивать что-то новое.

Поэтому я делаю акцент на фундаментальных знаниях, освоив которые вы сможете выбрать конкретную специализацию и развиваться в ней.
    


                
                    
    
        
            #43 Когда я стану Junior, Middle или Senior? 
        
    
    
        Деление разработчиков на Junior, Middle или Senior настолько сильно отличается от компании к компании, что в одном месте вас могут идентифицировать как Middle, в другом недотяните и до Junior, а в третьем будете уверенным Senior и такая ситуация практически везде.

Чем больше будете уделять времени и усилий что бы заниматься, в том числе самостоятельно, тем быстрее станете. Никах секретов нет.
    


                
                    
    
        
            #44 Сколько занятий необходимо чтобы написать свой сервис или устроиться на работу? 
        
    
    
        В случае с обучением конкретно ответить на данный вопросы невозможно т.к. на результат влияет множество факторов.

Скорость восприятия и усвоения информации у всех разная, каждый обладает разным количеством времени и мотивации на изучение чего-то нового. В случае с программированием придется много времени тратить на наработку практических навыков путем решения практических задач и освоения теории.

Пока вы просто смотрите со стороны без погружения в деятельность вы не поймете насколько быстро у вас получится научиться. Главное помнить, что научиться может каждый.
    


                
                    
    
        
            #45 Сейчас чуть подтяну программирование, устроюсь на работу и дальше доучусь в процессе 
        
    
    
        Такой вариант маловероятен. Чтобы пройти техническое интервью необходимо обладать опытом и отличными знаниями в рамках требований той или иной компании.

Помните, что работодатели хотят уже готовых и талантливых специалистов.

Добросовестно учите теорию, получайте практический опыт и все получится.
    


                
                    
    
        
            #46 Реально ли брать заказы на биржах фриланса? 
        
    
    
        Зарегистрируйтесь на любой бирже и проверьте самостоятельно.
    


                
                    
    
        
            #47 Где лучше работать программисту: по найму или на себя? 
        
    
    
        Если у вас совсем нет опыта, а очень хочется научиться, то лучше начать со своего проекта, таким образом вы получите ценный опыт и сможете стать интересны работодателям.
Польза от работы по найму в том что она дисциплинирует, вы получаете навыки промышленной разработки, разбираетесь в технологиях, осваиваете массу полезной информации.

Работа на себя - это также опыт, возможность реализовать то что интересно вам, вариант хобби, дополнительный источник дохода. Всегда приятно заниматься любимым делом.

На мой взгляд можно сочетать.
    


                
                    
    
        
            #48 Какие программы должны быть установлены для занятий? 
        
    
    
        Skype, Discord или Zoom

Браузеры Google Chrome или Firefox Developer Edition

Для пользователей Windows, Cmder

Остальное опционально.
    


                
                    
    
        
            #49 Телефон во время занятий 
        
    
    
        Перед началом занятия я ставлю телефон на беззвучный режим, просьба и к вам сделать то же самое.
    


                
                    
    
        
            #50 В каком часовом поясе находитесь? 
        
    
    
        UTC+3, Москва
    


                
                    
    
        
            #51 У меня ничего не получается\не понимаю, как быть? 
        
    
    
        У меня тоже никогда и ничего не получается с первого раза, если я буду изучать что-то совсем новое для меня, то я тоже не пойму сразу, это нормально, так у всех людей.

Чтобы начало получаться и возникло понимание надо подходить к любому вопросу спокойно, без эмоций, на все нужно время.

Если возникают трудности, вы можете задать вопрос мне, мы можем дополнительно созвониться, я объясню и покажу столько раз, сколько необходимо что бы вы поняли, разобрались.
Кроме того, вы можете задать вопрос поисковой системе, пообщаться с другими людьми в соц. сетях или Telegram-каналах, задать вопрос на Stack Overflow или воспользоваться десятками других вариантов решения любой проблемы\задачи\вопроса.
    


                
                    
    
        
            #52 Можно ли записывать занятие на видео? 
        
    
    
        Не просто можно, но и нужно, в Skype есть такая возможность, либо с помощью OBS или другого софта. Это удобно и позволит вам повторить пройденный материал. Не ленитесь повторять, это очень полезно.
    


                
                    
    
        
            #53 Где можно посмотреть ваши работы? 
        
    
    
        На странице о курсах есть подробная информация.
    


                
                    
    
        
            #54 Где можно почитать отзывы о ваших курсах? 
        
    
    
        Для начала хочу предложить небольшую подборку статей:


Стоит ли доверять отзывам в интернете? Хотите узнать, кто их пишет на самом деле?
Фабрика лжи: почему нельзя верить отзывам в интернете?
Вся правда об отзывах. Можно ли верить отзывам в интернете?


Или самостоятельно загуглите: стоит ли доверять отзывам в интернете, найдете еще больше интересной информации.

Что я хочу этим сказать?
С одной стороны вопрос справедливый, интернет наполнен разной публикой и вопрос доверия имеет место быть, с другой стороны, доверять всему что написано в интернете, особенно отзывам наивно.

Могу посоветовать открыть 2GIS или Яндекс карты и попробовать найти хорошего стоматолога в вашем городе по отзывам. Если вы живете в более-менее крупном городе обратите внимание на количество стоматологических клиник, кабинетов и т.п. в вашем районе, их больше чем парикмахерских. Ознакомьтесь с отзывами и сходите в первую понравивщуюся стоматологию опираясь на отзывы. Вас ждет лотерея 50\50, в которой если ошибетесь с выбором будет реально больно или не будет, как повезет, аналогично во всём остальном. На деле в реальной жизни всё оказывается несколько иначе чем написано в интернете и так во всём.

Если хотите оставить честный и объективный отзыв, буду благодарен за обратную связь. Если вы будете оставлять такие отзывы, то я обязательно создам соответствующий раздел на этом сайте где буду публиковать их.

Сомневающимся и не доверяющим напомню, что со мной можно легко созвониться и пообщаться, отвечу на любые ваши вопросы.
    


                
                    
    
        
            #55 Моему ребенку от 0 до 18, хочу обучить его программированию 
        
    
    
        Я не работаю с детьми.

Работаю с возрастной группой от 25-30+
    


                
                    
    
        
            #56 У нас все обучение строится только на практике 
        
    
    
        Прекрасный маркетинговый ход и многие на него ведутся. Только так не работает. Если вы хотите работать в IT-сфере, то вы должны очень хорошо понимать как все устроено и только потом уже браться делать что-то, но никак не наоборот. Многие заблуждаются когда думают, что я сначала начну делать, а после разберусь в процессе. Нет, не разберетесь, так не получится, вы обязаны освоить теорию на должном уровне.

Для начала, нужно пройти через изучение теории и её понимание, параллельно пробуя решать практические задачи. Все что вы видите в редакторе кода должно быть предельно понятным для вас. Вы должны быть способным объяснить все в корректной терминологии и с пониманием, только тогда у вас начнет получаться и будут брать на работу.

Да, это может показаться занудным и не всегда так весело как хотелось бы, но это крайне важно, особенно в самом начале, но это неизбежно.

Доказательством всего вышесказанного будет следующий факт: вас не возьмут в более-менее серьёзную компанию если вы не знаете Алгоритмов и Структур данных. Такие IT-гиганты как Google, Amazon, Yandex, Тинькофф и другие не просто так требуют от кандидатов глубокого понимания ряда чисто теоретических концепций.

Те, кто не проверяет вас на знание теории обычные "Дяди Васи коммерсы" и иметь дела с такими дядями я вам не советую.
    


                
                    
    
        
            #57 Правда что все программисты гении и каким уровнем интеллекта надо обладать? 
        
    
    
        Нет, не правда, гением быть необязательно. Давайте условно разделим айтишников на несколько групп:

Кодеры
HTML & CSS, Wordpress, "натянуть" тему, установить и настроить модуль и т.д.. Любая фриланс-биржа переполнена такими товарищами. Уровень дохода низкий, да и конкуренция большая. Будем говорить откровенно, для этой работы много ума не требуется и порог входа низкий.

Разработчики и Инженеры
Наиболее интересные для бизнеса категории it-специалистов, обычно их делят на junior, middle и senior, хотя лично я скептически отношусь к этой градации, ну пусть будет она. Чтобы не вдаваться в подробности, скажу что разница между разработчиками и инженерами в наличии профильного образования у последних. Хотя оно не всегда влияет на уровень дохода, хотя есть множество нюансов. Им уже нужно не мало знаний и опыта.

Архитекторы
А вот этим людям нужно очень много знаний, опыта и таланта т.к. они создают и разрабатывают инструменты (фреймворки, языки программирования) с которыми работают все вышеперечисленные группы. Как вы понимаете, таких людей не так уж много.

Деление весьма условное, что бы вы понимали +\- суть того что происходит в сфере.
Гениальность нужна тем, кто создает фундаментальные инструменты, всем остальным достаточно трудолюбия, здравомыслия и внимательности.
    


                
                    
    
        
            #58 Под какой операционной системой лучше работать? 
        
    
    
        В идеале под Unix-подобной (Linux, macOS), но если работаете под Windows, то вполне можно работать и в ней.

У меня два SSD, с разными операционными системами, в зависимости от задачи я пользуюсь той или иной OS.
Есть вариант пользоваться VirtualBox, но иногда от этого больше проблем чем пользы. Проще установить разные операционные системы на отдельные HDD или SSD и не морочить себе голову.
    


                
                    
    
        
            #59 Какой дистрибутив Linux посоветуете? 
        
    
    
        Лично я пользуюсь Ubuntu и Ubuntu Server. Надежный, проверенный дистрибутив. Но это вкусовщина, есть много других достойных, пробуйте.
    


                
                    
    
        
            #60 Играет ли какую-нибудь роль пол? 
        
    
    
        Нет, никакой.
    


                
                    
    
        
            #61 Есть ли у вас юридический статус? 
        
    
    
        Вы должны понимать, что данная деятельность не является основной для меня, да и честно-говоря на обучении много не заработать, это хобби, не более.
Поэтому работать по договору для меня вообще никакого смысла.

Но это не означает что я не плачу налоги, все средства которые я получаю от данного вида деятельности поступают на счет самозанятого откуда автоматически производятся все отчисления.
    


                
                    
    
        
            #62 У меня есть стабильная работа, стоит ли уходить в IT? 
        
    
    
        Сложно ответить однозначно. Попробуйте себя в этой сфере, если вам понравится, то вы никогда не пожалеете о том что пришли в IT.
    


                
                    
    
        
            #63 Вы работаете\обучаете CMS (WordPress, Drupal, Wagtail, Modx...)? 
        
    
    
        Нет, не работаю и нет, не обучаю и вам не советую тратить своё время на все что называется CMS (Content Management System).

CMS имеет мало общего с программированием и нормальным процессом разработки, это всегда борьба с ограничениями, а не реализация того функционала который необходим.
Поверьте, на много проще выучить пару-тройку языков программирования и делать качественные вещи, чем тратить время на изучение CMS что бы "накликать сайтик", нормальный сервис "накликать" в CMS уже не получится, придется учиться понимать и писать код.

С различными CMS я работал на протяжении 10-ти лет, знаю о чем говорю. Для меня эта тема закрыта.
    


                
                    
    
        
            #64 Нигде не могу найти ваш номер телефона, хочу позвонить 
        
    
    
        Я его не публикую из-за большого количества навязчивых нецелевых звонков (телемаркетинг).
Вы можете позвонить мне с помощью Telegram.
    


                
                    
    
        
            #65 Заменит ли искусственный интеллект труд программистов? 
        
    
    
        Вся шумиха вокруг ChatGPT, Midjourney и подобных технологий по большей части просто хайп, хотя технологии довольно интересные.
Однако, заменить или сымитировать возможности\алгоритмы работы мозга человека на данном уровне развития технологий пока нереально.
    


                
                    
    
        
            #66 Какие работы должны быть в моем портфолио для трудоустройства? 
        
    
    
        Если говорить о моей сфере (web-dev), то помимо идеальных знаний теоретической части того или иного языка желательно продемонстрировать потенциальному работодателю ваши варианты реализации:


REST API
Приложение с микросервисной архитектурой
Интернет-магазина (или Marketplace)
Социальной сети
Автоматизации некоего бизнес-процесса
...различные вариации для front-back'эндеров (клиентское application, сложные SQL запросы и т.д.)


Это минимум.
    


                
                    
    
        
            #67 Можно ли научиться программировать по видео в YouTube? 
        
    
    
        В русскоязычном сегменте YouTube крайне мало качественных каналов, т.н. блогеры часто просто воруют контент с англоязычных источников.

Читаем статью: https://thepythoncode.com/article/write-a-keylogger-python
А теперь смотрим видео:
https://youtu.be/sp3wX5YxnQI (даже не попытался изменить имена переменных статьи автора оригинала, просто украл и выдал за свой код)
https://youtu.be/tBz5GLipdaY (здесь автор - молодец, прикрутил функционал отправки ответа через телеграм-бота, но в остальном тоже самое бездумное копирование чужого кода)

Читаем статью: https://geeksforgeeks.org/how-to-use-pynput-to-make-a-keylogger/
Смотрим видео:
https://youtu.be/1_ufEqpr0kU (хотя бы изменены названия переменных)
https://youtu.be/xc3cq2J4DAc
Но дата публикации статьи раньше и выхода видео. Воруют даже в англоязычном сегменте.

Хочу предложить "авторам" ворованного кода решить проблему с их keylogger'ами. Дело в том, что они не пишут в логи кириллицу при переключении раскладки клавиатуры. Как можно решить эту проблему?
А вот здесь возникнут проблемы, т.к. в статье-оригинале этого нет.

Всего 5 минут поиска и сравнения по случайному запросу и такие интересные результаты.

Однозначно ответить на данный вопрос нельзя, есть сотни если не тысячи достойных внимания каналов и их авторов.
В качестве вспомогательного материала - да, можно, на YouTube очень много информации для начинающих, но существенно меньше для более опытных и крайне мало чего-то действительно стоящего. Найти как написать простенький сайт\калькулятор и т.п. вещи легко, но как только вы ходите за рамки банальных задач наступает информационный вакуум.
Поэтому для того чтобы научиться решать задачи выходящие за рамки примитивных надо пользоваться своей головой опираясь на фундаментальные знания и на собственное умение учиться и двигаться вперед.
    


                
                    
    
        
            #68 Если я изучу один язык программирования, насколько сложно будет освоить другие языки? 
        
    
    
        Языки бывают очень разными т.к. создаются под различные задачи. В большинстве случаев поняв один язык вы сможете разобраться с другим близким ему по назначению.
Например, освоив Python, вам будет проще понять PHP и JavaScript или в любых других сочетаниях. Но сложнее будет освоить Rust или Go (но это неточно). С такими языками как Java, C#, C++, SQL знания какого-нибудь PHP вам помогут, но несущественно.
    


                
                    
    
        
            #69 Мой знакомый знает 10 языков программирования 
        
    
    
        Знать более 2-3 языков на достойном уровне не то чтобы невозможно, теоретически возможно, но очень поверхностно т.к. в голове будет каша из-за огромного объема информации.

В реальности большинство программистов используют 1-3 языка и понимают синтаксис нескольких  близких по назначению языков, а если утверждают обратное, то скорее всего это сказки.
    


                
                    
    
        
            #70 Мне нужен ускоренный курс, хочу заниматься ежедневно 
        
    
    
        Достаточно заниматься 2-3 раза в неделю, в промежутках как следует осваивать\прорабатывать рассмотренную теорию, или практические задачи.
Никакого смысла в ежедневных занятиях нет, из-за переизбытка информации в голове будет каша.
    


                
                    
    
        
            #71 Вы принимаете оплату криптовалютой? 
        
    
    
        Нет.
    


                
                    
    
        
            #72 На «ты» или на «вы»? 
        
    
    
        Мода "тыкать" малознакомым людям пришла к нам из английского языка, в нем нет различий между "ты" и "вы", и то и другое будет you. В английском есть перегибы: Your highness (Ваше Высочество) или Your honor (Ваша честь)но эти словосочетания не имеют ничего общего с русскоязычным "вы".

В русском языке, и не только, но еще и в азиатских странах, принято обращаться на "вы" к незнакомым или малознакомым людям, старшим по возрасту В любом случае, обращение на "вы" – это банальная вежливость, просто вежливое обращение к человеку с проявлением уважения. Вот и всё.
На "ты" уместно обращаться к хорошо знакомым людям, к близким, друзьям, давним коллегам, детям.

Если бы мы с вами собирались на лавочке с целью пить водку, то я бы понял обращение на "ты", но если мы с вами совместно работаем\учимся\занимаемся серьёзным вещами, то неплохо было бы проявлять к друг-другу немного уважения.
    


                
                    
    
        
            #73 Слышал(а) про то что программисты подвержены "выгоранию" 
        
    
    
        Всё верно. Прокрастинация, т.н. "выгорание", "Синдром самозванца", стресс и еще масса неприятных психологических явлений могут преследовать программистов если безответственно относиться к своему психоэмоциональному состоянию.

На самом деле подобные явления случаются не только с людьми трудящимися в IT. Часто причинами подобных явлений является трудоголизм в связке с неправильным образом жизни.

Как избежать подобных явлений?


Следите за собственным здоровьем, а оно бывает как физическим, так и психическим
Избегайте стресса. Стресс - это зло
Найдите баланс между трудом и отдыхом
Не терзайте себя за то что чего-то не знаете
Не будьте трудоголиком, но и не будьте лентяем
Не сравнивайте себя с более опытными людьми
Двигайтесь вперед ежедневно посильными темпами
Радуйтесь собственным достижениям
Не работайте, не общайтесь и вообще не имейте никаких дел с идиотами и деструктивными людьми
Спорт, прогулки и живое общение, как бы это банально ни звучало
Откажитесь от психоактивных веществ
Научитесь полноценно отдыхать
Работа не должна быть РАБотой, а должна быть зоной вашего интереса и увлечения
Имейте интересы помимо IT для контраста, старайтесь реализовывать свои мечты (желательно чтобы они у вас были), а не чужие хотелки


Вроде очевидные вещи, но эти правила работают.
    


                
                    
    
        
            #74 Почему у людей не получается стать программистами? 
        
    
    
        
Лень
Неумение учиться
Нежелание изучать фундаментальные теоретические концепции
Желание получить быстрые результаты = желание обмануть систему и как-то выкрутиться\проскочить\влезть
Быстро пропадающая мотивация
Излишние самонадеянность и самоуверенность
Завышенные ожидания
Неадекватная реакция на собственные неудачи


Каждая из этих причин деструктивна сама по себе, часто они встречаются в совокупности. Следите за собой, будьте адекватны и разумны.

Заметьте, что в списке нет причин типа тупости, за более чем 10 лет мне встречались только пара-тройка альтернативно одаренных граждан, во всех остальных случаях корень неудач именно в вышеперечисленных причинах.
    


                
                    
    
        
            #75 Офис vs Удаленка? 
        
    
    
        Для меня и для моих коллег однозначно удаленка. Среди людей моей профессии существует негласное табу на работу в офисе.

Хотя это личное дело каждого.
    


                
            
        
    

        

        
    

    
        
            © 2014–2024 m5
        
    


    
    
    

    
    


      (function(m,e,t,r,i,k,a){m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)}; m[i].l=1*new Date();k=e.createElement(t),a=e.getElementsByTagName(t)[0],k.async=1,k.src=r,a.parentNode.insertBefore(k,a)}) (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym"); ym(46709688, "init", { clickmap:true, trackLinks:true, accurateTrackBounce:true, webvisor:true });  <div><img src="https://mc.yandex.ru/watch/46709688" style="position:absolute; left:-9999px;" alt="" /></div> 


